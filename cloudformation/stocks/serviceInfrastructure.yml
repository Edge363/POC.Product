AWSTemplateFormatVersion: 2010-09-09
Parameters:
  KeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Name of an existing EC2 KeyPair to enable SSH access to the ECS instances.
  ApplicationName:
    Type: 'String'
    Description: Name of Application to be launched.
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: Select a VPC that allows instances access to the Internet.
  DesiredCapacity:
    Type: Number
    Default: '1'
    Description: Number of instances to launch in your ECS cluster.
  MaxSize:
    Type: Number
    Default: '1'
    Description: Maximum number of instances that can be launched in your ECS cluster.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.medium
    ConstraintDescription: Please choose a valid instance type.
Mappings:
  AWSRegionToAMI:
    us-east-1:
      AMIID: ami-eca289fb
Resources:
  ####################NON-SHARED RESOURCES####################
  ####################NON-SHARED RESOURCES####################
  ####################NON-SHARED RESOURCES####################
  ProductALBListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    DependsOn: RandonLinkALBListener
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ProductTG
      Conditions:
        - Field: path-pattern
          Values:
            - /stock
      ListenerArn: !Ref RandonLinkALBListener
      Priority: 1
  ProductTG:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn: RandonLinkECSALB
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Name: ProductTG
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId
  ProductService:
    Type: 'AWS::ECS::Service'
    DependsOn: RandonLinkALBListener
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: '1'
      LoadBalancers:
        - ContainerName: !Ref ApplicationName
          ContainerPort: '80'
          TargetGroupArn: !Ref ProductTG
      Role: !Ref ProductServiceRole
      TaskDefinition: !Ref ProductTaskDefinition
  ProductServiceScalingTarget:
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    DependsOn: ProductService
    Properties:
      MaxCapacity: 2
      MinCapacity: 1
      ResourceId: !Join 
        - ''
        - - ProductService/
          - !Ref ECSCluster
          - /
          - !GetAtt 
            - ProductService
            - Name
      RoleARN: !GetAtt 
        - AutoscalingRole
        - Arn
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
  ProductServiceScalingPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: AStepPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref ProductServiceScalingTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            ScalingAdjustment: 200
  ProductServiceAlarmScaleUp:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: '1'
      Statistic: Average
      Threshold: '10'
      AlarmDescription: Alarm if our ALB generates too many HTTP 500s.
      Period: '60'
      AlarmActions:
        - !Ref ProductServiceScalingPolicy
      Namespace: AWS/ApplicationELB
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt 
            - RandonLinkECSALB
            - LoadBalancerFullName
      ComparisonOperator: GreaterThanThreshold
      MetricName: HTTPCode_ELB_5XX_Count
  ProductCloudwatchLogsGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join 
        - '-'
        - - ECSLogGroup
          - !Ref 'AWS::StackName'
      RetentionInDays: 1
  ProductTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Join 
        - ''
        - - !Ref 'AWS::StackName'
          - !Ref ApplicationName
      ContainerDefinitions:
        - Name: !Ref ApplicationName
          Cpu: '10'
          Essential: 'true'
          Image: !Join ['',['288372509437.dkr.ecr.us-east-1.amazonaws.com/', !Ref ApplicationName , ':latest']]
          Memory: '300'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ProductCloudwatchLogsGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref ApplicationName
          MountPoints:
            - ContainerPath: /usr/local/apache2/htdocs
              SourceVolume: my-vol
          PortMappings:
            - ContainerPort: 80
      Volumes:
        - Name: my-vol
Outputs:
  ProductService:
    Value: !Ref ProductService
  ECSCluster:
    Value: !Ref ECSCluster
  RandonLinkECSALB:
    Description: Your ALB DNS URL
    Value: !Join 
      - ''
      - - !GetAtt 
          - RandonLinkECSALB
          - DNSName
  ProductTaskDefinition:
    Value: !Ref ProductTaskDefinition
    